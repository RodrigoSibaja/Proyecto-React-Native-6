{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar express = require(\"express\");\n\nvar _require = require(\"react-native-reanimated\"),\n    exp = _require.exp;\n\nvar router = express.Router();\n\nvar fetch = require(\"node-fetch\");\n\nrouter.get('/', function _callee(req, res) {\n  var _req$query, gamertag, platform, headers, response, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _req$query = req.query, gamertag = _req$query.gamertag, platform = _req$query.platform;\n          _context.prev = 1;\n          headers = {\n            \"TRN-Api-Key\": process.env.TRACKER_API_KEY\n          };\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(process.env.TRACKER_API_URL + \"\\n        /profile/\" + platform + \"/\" + gamertag + \"\\n        \", headers));\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          data = _context.sent;\n\n          if (!(data.errors && data.errors.length > 0)) {\n            _context.next = 12;\n            break;\n          }\n\n          data.status = false;\n          return _context.abrupt(\"return\", res.status(404).json({\n            msg: gamertag + \" profile not found\"\n          }));\n\n        case 12:\n          data.status = true;\n          res.status(200).json(data);\n          _context.next = 19;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](1);\n          res.status(500).json({\n            msg: 'Server Error'\n          });\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 16]], Promise);\n});","map":{"version":3,"sources":["D:/Tec/Universidad/6°/Dispositivos Móviles/Proyecto-React-Native-6-main/Evaluacion 1/S9_ReactNativeNavigation/routes/profile.js"],"names":["express","require","exp","router","Router","fetch","get","req","res","query","gamertag","platform","headers","process","env","TRACKER_API_KEY","TRACKER_API_URL","response","json","data","errors","length","status","msg"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACgBA,OAAO,CAAC,yBAAD,C;IAAfC,G,YAAAA,G;;AACR,IAAMC,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf;;AACA,IAAMC,KAAK,GAAGJ,OAAO,CAAC,YAAD,CAArB;;AAEAE,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,iBAAMC,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEiBD,GAAG,CAACE,KAFrB,EAELC,QAFK,cAELA,QAFK,EAEKC,QAFL,cAEKA,QAFL;AAAA;AAKFC,UAAAA,OALE,GAKQ;AACZ,2BAAeC,OAAO,CAACC,GAAR,CAAYC;AADf,WALR;AAAA;AAAA,2CASeV,KAAK,CAAIQ,OAAO,CAACC,GAAR,CAAYE,eAAhB,2BACjBL,QADiB,SACLD,QADK,iBAG3BE,OAH2B,CATpB;;AAAA;AASFK,UAAAA,QATE;AAAA;AAAA,2CAeWA,QAAQ,CAACC,IAAT,EAfX;;AAAA;AAeFC,UAAAA,IAfE;;AAAA,gBAiBJA,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACC,MAAL,CAAYC,MAAZ,GAAqB,CAjBhC;AAAA;AAAA;AAAA;;AAkBJF,UAAAA,IAAI,CAACG,MAAL,GAAc,KAAd;AAlBI,2CAmBGd,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AACxBK,YAAAA,GAAG,EAAKb,QAAL;AADqB,WAArB,CAnBH;;AAAA;AAuBRS,UAAAA,IAAI,CAACG,MAAL,GAAc,IAAd;AACAd,UAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqBC,IAArB;AAxBQ;AAAA;;AAAA;AAAA;AAAA;AA0BRX,UAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AACjBK,YAAAA,GAAG,EAAE;AADY,WAArB;;AA1BQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["const express = require(\"express\");\r\nconst { exp } = require(\"react-native-reanimated\");\r\nconst router = express.Router();\r\nconst fetch = require(\"node-fetch\");\r\n\r\nrouter.get('/', async(req, res) =>{\r\n\r\n    const {gamertag, platform} = req.query;\r\n\r\n    try {\r\n        const headers = {\r\n            \"TRN-Api-Key\": process.env.TRACKER_API_KEY\r\n        }\r\n\r\n        const response = await fetch(`${process.env.TRACKER_API_URL}\r\n        /profile/${platform}/${gamertag}\r\n        `,\r\n         headers\r\n        );\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.errors && data.errors.length > 0) {\r\n            data.status = false;\r\n            return res.status(404).json({\r\n                msg: `${gamertag} profile not found`,\r\n            });\r\n        }\r\n        data.status = true;\r\n        res.status(200).json(data);\r\n    } catch (err) {\r\n        res.status(500).json({\r\n            msg: 'Server Error',\r\n        })\r\n    }\r\n})"]},"metadata":{},"sourceType":"script"}